name: Build Workflow

on:
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          
      - name: Install requirements
        run: |
          pip install -r src/requirements.txt
          
      - name: Run PyInstaller
        run: |
          python -m PyInstaller src/simple_backup.spec

      - uses: actions/upload-artifact@v4
        with:
          name: SimpleBackup
          path: dist/simple_backup

      - name: Get Latest Tag
        id: get_tag
        run: |
          git fetch --tags
          TAG=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null || echo "v1.0.0")
          echo "LATEST_TAG=$TAG" >> $GITHUB_ENV

      - name: Increment Tag
        id: increment_tag
        run: |
          TAG=${LATEST_TAG:-v1.0.0}
          IFS='.' read -ra PARTS <<< "${TAG#v}"
          MAJOR=${PARTS[0]}
          MINOR=${PARTS[1]}
          PATCH=${PARTS[2]}
          NEW_TAG="v$MAJOR.$MINOR.$((PATCH+1))"
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.NEW_TAG }}
          release_name: Release ${{ env.NEW_TAG }}
          body: |
            Newest release!
          draft: false
          prerelease: false
          
      - name: Upload Release Asset - EXE
        id: upload-release-asset-exe
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{steps.create_release.outputs.upload_url}}
          asset_path: dist/simple_backup
          asset_name: SimpleBackup.exe
          asset_content_type: application/zip

      - name: Upload Release Asset - setup.conf
        id: upload-release-asset-conf
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{steps.create_release.outputs.upload_url}}
          asset_path: src/setup.conf
          asset_name: setup.conf
          asset_content_type: application/octet-stream
